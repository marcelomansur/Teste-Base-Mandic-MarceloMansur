---
# tasks file for provisioning
- name: Criando uma chave ssh para EC2
  local_action:
    module: ec2_key
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    name: "{{ keypair }}"
    region: "{{ region }}"
  register: ec2_key_result

- name: Salvando chave ssh
  copy:
    content: "{{ ec2_key_result.key.private_key }}"
    dest: "./{{ keypair }}.pem"
    mode: 0400
  when: ec2_key_result.changed

- name: Criando o Security Group
  local_action:
    module: ec2_group
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    name: "{{ sec_group_name }}"
    description: sg-ansible-test
    region: "{{ region }}"
    resource_tags:
      Name: ansible-test
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: SSH
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
        rule_desc: HTTP
      - proto: tcp
        from_port: 8000
        to_port: 8000
        cidr_ip: 0.0.0.0/0
        rule_desc: Wordpress
      - proto: tcp
        from_port: 8001
        to_port: 8001
        cidr_ip: 0.0.0.0/0
        rule_desc: Magento
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
        rule_desc: Tomcat
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando a instancia EC2
  local_action:
    module: ec2
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    # id: "ansible-test"
    group: "{{ sec_group_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    wait: true
    region: "{{ region }}"
    keypair: "{{ keypair }}"
    count: "{{ count }}"
    instance_tags:
      Name: ansible-test
  register: ec2

- name: Adicionando a instancia ao inventario temp
  add_host:
    name: "{{ item.public_ip }}"
    groups: webserver
  with_items: "{{ ec2.instances }}"

- name: Esperando o SSH
  local_action:
    module: wait_for
    host: "{{ item.public_ip }}"
    port: 22
    state: "started"
  with_items: "{{ ec2.instances }}"

- name: Exportando ip publico como um fato
  set_fact:
    ec2_public_ip: "{{ ec2.instances[0].public_ip }}"
